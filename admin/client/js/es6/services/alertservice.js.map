{"version":3,"sources":["services/alertservice.ts"],"names":["slatwalladmin","slatwalladmin.AlertService","slatwalladmin.AlertService.constructor"],"mappings":"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","file":"services/alertservice.js","sourceRoot":"/Users/ryanmarchand/Sites/Slatwall/","sourcesContent":["/// <reference path='../../../../client/typings/slatwallTypescript.d.ts' />\n/// <reference path='../../../../client/typings/tsd.d.ts' />\n\n/*services return promises which can be handled uniquely based on success or failure by the controller*/\nmodule slatwalladmin{\n    //service\n    \n    export interface IAlertService {\n        get (): Alert[];\n    }\n    \n    export class AlertService implements IAlertService{\n        public static $inject = [\n            '$timeout'\n        ];\n        \n        constructor(\n            private $timeout: ng.ITimeoutService,\n            public alerts:Alert[]\n        ) {\n            this.alerts = [];\n        }\n        \n        get = (): Alert[] =>{\n            return this.alerts || [];\n        }\n        \n        addAlert = (alert:Alert):void =>{\n            this.alerts.push(alert);\n            this.$timeout((alert)=> {\n              this.removeAlert(alert);\n            }, 3500);\n        }\n        \n        addAlerts = (alerts:Alert[]):void =>{\n        \talerts.forEach(alert => {\n        \t\tthis.addAlert(alert);\n        \t});\n        }\n        \n        removeAlert = (alert:Alert):void =>{\n            var index:number = this.alerts.indexOf(alert, 0);\n            if (index != undefined) {\n               this.alerts.splice(index, 1);\n            }\n        }\n        \n        getAlerts = (): Alert[] =>{\n\t\t\treturn this.alerts;\n\t\t}\t\t\n        \n        formatMessagesToAlerts = (messages): Alert[] =>{\n            var alerts = [];\n            for(var message in messages){\n                var alert = new Alert();\n               \talert.msg=messages[message].message;\n                alert.type=messages[message].messageType;\n                \n                alerts.push(alert);\n                if(alert.type === 'success' || alert.type === 'error'){\n                     $timeout(function() {\n                      alert.fade = true;\n                    }, 3500);\n                    \n                    alert.dismissable = false;\n                    \n                }else{\n                    alert.fade = false;\n                    alert.dismissable = true;\n                }\n            }\n            return alerts;\n        }\n        \n        removeOldestAlert = ():void =>{\n            this.alerts.splice(0,1);\n        }\n    }  \n    \n}\nmodule slatwalladmin{\n     angular.module('slatwalladmin')\n    .service('alertService',AlertService); \n}\n    \n"]}