{"version":3,"sources":["controllers/globalsearch.ts"],"names":["slatwalladmin","slatwalladmin.globalSearch","slatwalladmin.globalSearch.constructor"],"mappings":"AAAA,2EAA2E;AAC3E,4DAA4D;AAE5D,IAAO,aAAa,CA8LnB;AA9LD,WAAO,aAAa,EAAA,CAAC;IACjBA,IAAaA,YAAYA;QAarBC,SAbSA,YAAYA,CAcTA,MAAiBA,EACjBA,IAAoBA,EACpBA,OAA0BA,EAC1BA,QAA4BA,EAC5BA,SAAwBA;YAJxBC,WAAMA,GAANA,MAAMA,CAAWA;YACjBA,SAAIA,GAAJA,IAAIA,CAAgBA;YACpBA,YAAOA,GAAPA,OAAOA,CAAmBA;YAC1BA,aAAQA,GAARA,QAAQA,CAAoBA;YAC5BA,cAASA,GAATA,SAASA,CAAeA;QAEpCA,CAACA;QAnBDD,sBAAsBA;QACtBA,4FAA4FA;QAC5FA,yGAAyGA;QACzGA,yCAAyCA;QAC3BA,oBAAOA,GAAGA;YACrBA,QAAQA;YACRA,MAAMA;YACNA,SAASA;YACTA,UAAUA;YACVA,WAAWA;SACbA,CAACA;QAiLNA,mBAACA;IAADA,CA5LAD,AA4LCC,IAAAD;IA5LYA,0BAAYA,GAAZA,YA4LZA,CAAAA;AACLA,CAACA,EA9LM,aAAa,KAAb,aAAa,QA8LnB","file":"controllers/globalsearch.js","sourceRoot":"/Users/ryanmarchand/Sites/Slatwall/","sourcesContent":["/// <reference path='../../../../client/typings/slatwallTypescript.d.ts' />\n/// <reference path='../../../../client/typings/tsd.d.ts' />\n\nmodule slatwalladmin{\n    export class globalSearch {\n        // $inject annotation.\n        // It provides $injector with information about dependencies to be injected into constructor\n        // it is better to have it close to the constructor, because the parameters must match in count and type.\n        // See http://docs.angularjs.org/guide/di\n        public static $inject = [\n           '$scope',\n           '$log',\n           '$window',\n           '$timeout',\n           '$slatwall'\n        ];\n        \n        constructor(\n            private $scope: ng.IScope,\n            private $log: ng.ILogService,\n            private $window: ng.IWindowService,\n            private $timeout: ng.ITimeoutService,\n            private $slatwall: slatwalladmin\n        ) {\n        }\n                \n//        angular.module('slatwalladmin').controller('globalSearch', [\n//        \t'$scope',\n//        \t'$log',\n//        \t'$window',\n//        \t'$timeout',\n//        \t'$slatwall',\n//        \tfunction(\n//        \t\t$scope,\n//        \t\t$log,\n//        \t\t$window,\n//        \t\t$timeout,\n//        \t\t$slatwall\n//        \t){\n//        \t\t$scope.keywords = '';\n//        \t\t$scope.searchResultsOpen = false;\n//        \t\t$scope.sidebarClass = 'sidebar';\n//        \t\t$scope.loading = false; //Set loading wheel to false\n//        \t\t$scope.resultsFound = true; // Set the results Found to true because no search has been done yet\n//        \t\n//        \t\t$scope.searchResults = {\n//        \t\t\t'product' : {\n//        \t\t\t\t'title': 'Products',\n//        \t\t\t\t'resultNameFilter': function(data) {\n//        \t\t\t\t\treturn data['productName'];\n//        \t\t\t\t},\n//        \t\t\t\t'results' : [],\n//        \t\t\t\t'id' : function(data) {\n//        \t\t\t\t\treturn data['productID'];\n//        \t\t\t\t}\n//        \t\t\t},\n//        \t\t\t'brand' : {\n//        \t\t\t\t'title': $slatwall.getRBKey('entity.Brands'),\n//        \t\t\t\t'resultNameFilter': function(data) {\n//        \t\t\t\t\treturn data['brandName'];\n//        \t\t\t\t},\n//        \t\t\t\t'results' : [],\n//        \t\t\t\t'id' : function(data) {\n//        \t\t\t\t\treturn data['brandID'];\n//        \t\t\t\t}\n//        \t\t\t},\n//        \t\t\t'account' : {\n//        \t\t\t\t'title': 'Accounts',\n//        \t\t\t\t'resultNameFilter': function(data) {\n//        \t\t\t\t\treturn data['firstName'] + ' ' + data['lastName'];\n//        \t\t\t\t},\n//        \t\t\t\t'results' : [],\n//        \t\t\t\t'id' : function(data) {\n//        \t\t\t\t\treturn data['accountID'];\n//        \t\t\t\t}\n//        \t\t\t},\n//        \t\t\t'vendor' : {\n//        \t\t\t\t'title': 'Vendors',\n//        \t\t\t\t'resultNameFilter': function(data) {\n//        \t\t\t\t\treturn data['vendorName'];\n//        \t\t\t\t},\n//        \t\t\t\t'results' : [],\n//        \t\t\t\t'id' : function(data) {\n//        \t\t\t\t\treturn data['vendorID'];\n//        \t\t\t\t}\n//        \t\t\t}\n//        \t\t};\n//        \t\n//        \t\n//        \t\tvar _timeoutPromise;\n//        \t\tvar _loadingCount = 0;\n//        \t\t\n//        \t\t$scope.updateSearchResults = function() {\n//        \t\t\t\n//        \t\t\t$scope.loading = true;\n//        \t\t\t$scope.showResults();\n//        \t\t\t\n//        \t\t\tif(_timeoutPromise) {\n//        \t\t\t\t$timeout.cancel(_timeoutPromise);\n//        \t\t\t}\n//        \t\n//        \t\t\t_timeoutPromise = $timeout(function(){\n//        \t\t\t\t\n//        \t\t\t\t// If no keywords, then set everything back to their defaults\n//        \t\t\t\tif($scope.keywords === ''){\n//        \t\t\t\t\t$scope.hideResults();\n//        \t\t\t\t\t\n//        \t\t\t\t// Otherwise performe the search\n//        \t\t\t\t} else {\n//        \t\t\t\t\t$scope.showResults();\n//        \t\t\t\t\n//        \t\t\t\t\t// Set the loadingCount to the number of AJAX Calls we are about to do\n//        \t\t\t\t\t_loadingCount = Object.keys($scope.searchResults).length;\n//        \t\t\t\t\t\n//        \t\t\t\t\tfor (var entityName in $scope.searchResults){\n//        \t\t\t\t\t\t\n//        \t\t\t\t\t\t(function(entityName) {\n//        \t\t\n//        \t\t\t\t\t\t\tvar searchPromise = $slatwall.getEntity(entityName, {keywords : $scope.keywords, pageShow : 4, deferkey : 'global-search-'+entityName} );\n//        \t\t\n//        \t\t\t\t\t\t\tsearchPromise.then(function(data){\n//        \t\t\t\t\t\t\t\t\n//        \t\t\t\t\t\t\t\t// Clear out the old Results\n//        \t\t\t\t\t\t\t\t$scope.searchResults[ entityName ].results = [];\n//        \t\t\t\t\t\t\t\t$scope.searchResults[ entityName ].title = $slatwall.getRBKey('entity.'+entityName.toLowerCase()+'_plural');\n//        \t\t\t\t\t\t\t\t// push in the new results\n//        \t\t\t\t\t\t\t\tfor(var i in data.pageRecords) {\n//        \t\t\t\t\t\t\t\t\t$scope.searchResults[ entityName ].results.push({\n//        \t\t\t\t\t\t\t\t\t\t'name': $scope.searchResults[ entityName ].resultNameFilter( data.pageRecords[i] ),\n//        \t\t\t\t\t\t\t\t\t\t'link': '?slatAction=entity.detail'+entityName+'&'+entityName+'ID='+$scope.searchResults[ entityName ].id(data.pageRecords[i]),\n//        \t\t\t\t\t\t\t\t\t});\n//        \t\t\t\t\t\t\t\t}\n//        \t\t\t\t\t\t\t\t\n//        \t\t\t\t\t\t\t\t// Increment Down The Loading Count\n//        \t\t\t\t\t\t\t\t_loadingCount--;\n//        \t\t\t\t\t\t\t\t\n//        \t\t\t\t\t\t\t\t// If the loadingCount drops to 0, then we can update scope\n//        \t\t\t\t\t\t\t\tif(_loadingCount == 0){\n//        \t\t\t\t\t\t\t\t\t$scope.loading = false;\t\n//        \t\t\t\t\t\t\t\t\t\n//        \t\t\t\t\t\t\t\t\tvar _foundResults = false;\n//        \t\t\t\t\t\t\t\t\tfor (var _thisEntityName in $scope.searchResults){\n//        \t\t\t\t\t\t\t\t\t\tif($scope.searchResults[ _thisEntityName ].results.length){\n//        \t\t\t\t\t\t\t\t\t\t\t_foundResults = true;\n//        \t\t\t\t\t\t\t\t\t\t\tbreak;\n//        \t\t\t\t\t\t\t\t\t\t}\n//        \t\t\t\t\t\t\t\t\t}\n//        \t\t\t\t\t\t\t\t\t\n//        \t\t\t\t\t\t\t\t\t$scope.resultsFound = _foundResults;\n//        \t\t\t\t\t\t\t\t}\n//        \t\t\t\t\t\t\t\t\n//        \t\t\t\t\t\t\t});\n//        \t\t\n//        \t\t\t\t\t\t})( entityName );\n//        \t\t\t\t\t\t\n//        \t\t\t\t\t}\n//        \t\t\t\t}\n//        \t\n//        \t\t\t}, 500);\n//        \t\t\n//        \t\t\t\n//        \t\t};\n//        \t\n//        \t\n//        \t\t$scope.showResults = function() {\n//        \t\t\t$scope.searchResultsOpen = true;\n//        \t\t\t$scope.sidebarClass = 'sidebar s-search-width';\n//        \t\t\t$window.onclick = function(event){\n//        \t\t\t\tvar _targetClassOfSearch = event.target.parentElement.offsetParent.classList.contains('sidebar');\n//        \t\t\t\tif(!_targetClassOfSearch){\n//        \t\t\t\t\t$scope.hideResults();\n//        \t\t\t\t\t$scope.$apply();\n//        \t\t\t\t}\n//        \t\t\t};\n//        \t\t};\n//        \t\n//        \t\t$scope.hideResults = function() {\n//        \t\t\t$scope.searchResultsOpen = false;\n//        \t\t\t$scope.sidebarClass = 'sidebar';\n//        \t\t\t$scope.search.$setPristine();\n//        \t\t\t$scope.keywords = \"\";\n//        \t\t\t$window.onclick = null;\n//        \t\t\t$scope.loading = false;\n//        \t\t\t$scope.resultsFound = true;\n//        \t\t\t\n//        \t\t\tfor (var entityName in $scope.searchResults){\n//        \t\t\t\t$scope.searchResults[ entityName ].results = [];\n//        \t\t\t}\n//        \t\t};\n//        \n//        \t}\n//        ]);\n    }\n}\n"]}